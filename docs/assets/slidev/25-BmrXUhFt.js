import{_ as v}from"./VClick-CW7YE9IO.js";import{_ as g}from"./VClicks-B5MX7Orx.js";import{I as S}from"../default-ZcEg1CmY.js";import{_ as x,aH as c}from"../index-CJbOLs0M.js";import{p as m,u as d,f as k}from"./context-Cbtxpv1X.js";import{o as w,c as $,k as o,l as n,q as b,s as y,e,a8 as p}from"../modules/vue-AU5P7adB.js";import"../BaseGrid-B0Dl_yJp.js";import"../index-Df7Mz0OH.js";import"../modules/shiki-CWjzht_g.js";const P={__name:"25",setup(f,{expose:a}){a(),m(c);const{$slidev:l,$nav:r,$clicksContext:i,$clicks:_,$page:s,$renderContext:t,$frontmatter:h}=d(),u={$slidev:l,$nav:r,$clicksContext:i,$clicks:_,$page:s,$renderContext:t,$frontmatter:h,InjectedLayout:S,get frontmatter(){return c},get useSlideContext(){return d},get _provideFrontmatter(){return m},get _frontmatterToProps(){return k}};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}},C=e("h1",null,"How much did we gain?",-1),T=e("p",null,"Original parse time via acorn in JS: 180ms",-1),I=e("ul",null,[e("li",null,"Parse via SWC in Rust: 51ms"),e("li",null,"Serialize in Rust: 8ms"),e("li",null,"Deserialize in JavaScript: 47ms (vs. > 200ms)")],-1),J=e("p",null,"Total parse time including conversion: 108ms",-1),R=e("h2",null,"What about multi-threading?",-1),j=e("ul",null,[e("li",null,"JavaScript workers are very slow to instantiate"),e("li",null,"However, POSIX threads in Rust are nearly free")],-1),z=e("p",null,[p("For non-WebAssembly, only the decode time is relevant"),e("br"),p(" â€”which can be eliminated if JS directly works on the buffer as well.")],-1);function B(f,a,l,r,i,_){const s=g,t=v;return w(),$(r.InjectedLayout,b(y(r._frontmatterToProps(r.frontmatter,24))),{default:o(()=>[C,T,n(s,null,{default:o(()=>[I]),_:1}),n(t,null,{default:o(()=>[J]),_:1}),n(t,null,{default:o(()=>[R]),_:1}),n(t,null,{default:o(()=>[j]),_:1}),n(t,null,{default:o(()=>[z]),_:1})]),_:1},16)}const D=x(P,[["render",B],["__file","/@slidev/slides/25.md"]]);export{D as default};
